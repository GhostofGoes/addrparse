[tox]
envlist = py{36,37}-{linux,macos,windows}
skip_missing_interpreters = true
minversion = 3.4

[testenv]
description = Run CLI tests under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
passenv = TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
deps =
    pytest
    pytest-random-order
    pytest-mock
commands =
    python -m addrparse --help
    addrparse --help
    pytest --basetemp={envtmpdir} --verbose {posargs}


[testenv:coverage]
description = "Run the test suite with coverage checks and reporting"
setenv =
    {[testenv]setenv}
    COVERAGE_FILE = .coverage.{envname}
passenv =
    {[testenv]passenv}
deps =
    {[testenv]deps}
    pytest-cov
    coverage
commands =
    pytest --basetemp={envtmpdir} --verbose --cov=addrparse --cov=tests --cov-report term-missing --cov-report html {posargs}

[testenv:check]
description = "Run code quality, static analysis, and spelling checks"
skip_install = true
ignore_errors = false
deps =
    check-manifest
    codespell
    flake8
    flake8-bugbear
    flake8-import-order
    flake8-tidy-imports
    flake8-todo
    flake8-string-format
    ; NOTE: the released version of flake8-mypy is buggy on Windows (17.8.0)
    ; flake8-mypy
    https://github.com/ambv/flake8-mypy/archive/master.tar.gz
    bandit
commands =
    check-manifest {toxinidir}
    codespell --check-filenames --skip="build,dist,*.pyc,*.class,*.git,*.vagrant,*.tox,*.egg-info,*.idea,*.vscode,_build,.doctrees,htmlcov"
    flake8 addrparse tests
    ; TODO: add --quiet once the next bandit release happens
    ; --skip B404,B603,B104
    bandit --recursive addrparse

[flake8]
max-line-length = 99
application-import-names = addrparse
exclude = .github, .vagrant, docs, *.egg-info, __pycache__, .git, .tox
ignore = E203, W503, E401, F401, E226
import-order-style = pycharm
show-source = True
max-complexity = 28

[pytest]
minversion = 3.4
testpaths = tests
norecursedirs = .github .git .tox .vagrant .idea .vscode dist build *.egg .*
addopts =
    --durations=5
    --tb=short
    --random-order
filterwarnings =
    ignore::DeprecationWarning